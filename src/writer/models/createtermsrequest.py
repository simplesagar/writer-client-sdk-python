"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .termcreate import TermCreate
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from typing import List, Optional
from writer import utils

class FailHandling(str, Enum):
    ACCUMULATE = 'accumulate'
    VALIDATE = 'validate'
    SKIP = 'skip'
    VALIDATE_ONLY = 'validateOnly'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateTermsRequest:
    fail_handling: Optional[FailHandling] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('failHandling'), 'exclude': lambda f: f is None }})
    models: Optional[List[TermCreate]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('models'), 'exclude': lambda f: f is None }})
    

