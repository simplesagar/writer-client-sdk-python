"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from .createtermsrequest import CreateTermsRequest
from .createtermsresponse import CreateTermsResponse
from typing import Dict, List, Optional


@dataclasses.dataclass
class AddTermsRequest:
    create_terms_request: CreateTermsRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    team_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'teamId', 'style': 'simple', 'explode': False }})
    organization_id: Optional[int] = dataclasses.field(default=None, metadata={'path_param': { 'field_name': 'organizationId', 'style': 'simple', 'explode': False }})
    



@dataclasses.dataclass
class AddTermsResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    headers: Dict[str, List[str]] = dataclasses.field()
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    create_terms_response: Optional[CreateTermsResponse] = dataclasses.field(default=None)
    

